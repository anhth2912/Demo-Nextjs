import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { gql } from '@apollo/client';
import { initializeApollo } from '../lib/apollo';
import styles from '../styles/Home.module.css';
import { CREATE_AUTHOR, CREATE_BOOK } from '../graphql-client/mutations/createMutation';
import {
  GET_ALL_AUTHOR,
  GET_ALL_BOOK,
  GET_AUTHOR,
  GET_BOOK,
} from '../graphql-client/queries/createQueries';
//import GET_ALL_AUTHOR from '../graphql-client/queries/getAllAuthor.graphql';
import { useQuery, useMutation } from '@apollo/client';

const Home: NextPage = (props) => {
  const { data, loading, error } = useQuery(GET_ALL_AUTHOR);
  console.log(data);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Link href="/about">
          <a>About Page</a>
        </Link>
      </main>
    </div>
  );
};

export async function getStaticProps() {
  const apolloClient = initializeApollo();

  // await apolloClient.query({
  //   //query: ViewerDocument,
  // });

  return {
    props: {
      initialApolloState: apolloClient.cache.extract(),
    },
  };
}

export default Home;
